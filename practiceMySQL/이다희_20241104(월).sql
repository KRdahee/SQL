#DBMS 종류에 대해 4가지 이상 검색해보시고 장단점을 검색하여 서술해 주세요.
/*
1) Oracle
미국 오라클(Oracle) 사의 관계형 데이터베이스 관리 시스템(RDBMS)
오픈 소스 DBMS가 있음에도 안정성과 유지보수를 보장받을 수 있다는 장점 때문에 비 IT업종 기업에서 많이 사용한다.

#특징
1. 기업용으로 주로 사용
2. 대량의 정보관리를 할 때 타 DBMS에 비해 좋은 성능을 보인다.
3. 오라클 자체 SQL 쿼리를 사용해 표준 형식과 약간 다름
 

 
2) MySql
관계형 데이터베이스 관리 시스템(RDMS)
오픈 소스이며, 다중 사용자와 다중 스레드 지원

#특징
1. 오픈 소스 라이선스를 따르기 때문에 무료로 사용 가능
2. 표준 SQL 형식 사용
3. 오픈 소스이기 때문에 기술 지원의 한계가 있음



3) PostrgreSQL
오픈 소스 객체-관계형 데이터베이스 시스템 (ORDBMS)
macOS 서버의 경우 기본 데이터베이스로 사용된다.
북미나 일본에서 많이 사용
 
#특징
1. 초기 개발 단계부터 완벽한 ACID와 MVCC를 지원하는 아키텍처로 설계
2. 다양한 데이터베이스 객체를 사용자가 임의로 만들 수 있는 기능을 SQL 차원에서 제공
3. 테이블 상속 기능을 이용해 하위 테이블 생성 가능
4. 오픈 소스임에도 상용 RDBMS급의 기능을 제공
5. 기본적인 CRUD 성능이 경쟁 DB에 비해 좋지 않다.
 


4) MongoDB
크로스 플랫폼 도큐먼트 지향 데이터베이스 시스템
NoSQL 데이터베이스
 
#특징
1. ACID 대신 BASE를 택해 성능과 가용성을 우선시함
2. 모든 데이터가 JSON 형태로 저장, 스키마가 없음
3. 다양한 인덱싱 제공
4. 일관성이 매우 중요한 작업에는 사용하기 힘들다
 

 
5) Redis
Remote Dictionary Server의 약자
Key-Value 구조의 비정형 데이터를 저장하고 관리하기 위한 오픈 소스 기반의 비 관계형 데이터베이스 관리 시스템
모든 데이터를 메모리로 불러와서 처리하는 메모리 기반 DBMS
 
#특징
1. 메모리 기반이기에 속도가 빠르고 간편
2. 최고의 성능이 필요한 웹, 모바일, 게임, 광고 기술 및 IoT 애플리케이션에서 널리 사용
3. 문자열, 리스트, 해시, 셋, 정렬된 셋과 같은 다양한 자료구조의 지원
 

 
6) MariaDB
오픈 소스의 관계형 데이터베이스 관리 시스템(RDBMS)
MySQL과 동일한 소스 코드를 기반, GPL v2 라이선스를 따름
MySQL의 개발진들이 오라클의 정책이 추구하는 바와 맞지 않아 나와서 개발한 DB
 
#특징
1. 위의 말한 관계로 인해 MySQL과 거의 100% 호환성
2. MySQL에 비해 애플리케이션 부분 속도가 약 4~5천 배 빠르고, 성능면에선 70% 향상을 보임.

*/

#데이터베이스 제약 조건을 검색해보시고 서술해주세요.
/*
PK
Primary key
- 기본 키 (중복이나 빈값(NULL)이 들어올 수 없음)

NN
Not Null
- Null(빈값)이 들어올 수 없음

B
Binary
- 데이터를 이진 문자열((010101)로 저장함

UN
Unsigned data type
- 부호 없음 (음수가 아닌 숫자만 해당)- INT, DOUBLE 등의 경우 UN을 사용하면 -값~+값의 범위인 경우 -값은 없어지고 +값만 2배로 늘어남*예시 : 범위가 -50 ~ 50인 경우 범위는 동일하지만 0에서 시작해 0 ~ 100으로 됨

UQ
 Unique
중복 값을 넣을 수 없음

ZF
Zero Filled
- 열 크기보다 작은 값을 넣은 경우 0으로 채운 뒤 삽입시킴- INT(5)인 경우 모든 필드는 5번째 자리까지 0으로 채워짐* 예시 : 11 = 00011, 864 = 00864 등으로 0으로 채워짐

AI
Auto Increment
- Insert 시마다 값이 1씩 늘어남

G
Generated Column
- 다른 열을 기반으로 한 수식으로 생성된 값

Default/Expression
- 기본값, 기본값에 수식 설정

*/

#MYSQL데이터 타입에 대하여 검색해보고 서술하시오.
/*
데이터 타입(자료형)
컴퓨터 시스템과 프로그래밍 언어에서 실수, 정수, 소수 자료형 등의 여러 종류의 데이터를 식별하는 타입으로서, 해당 자료형에 대한 가능한 값, 해당 자료형에서 수행을 할 수 있는 명령어, 데이터의 형태, 의미, 크기와 해당 자료형의 값이 저장되는 방식이다.

<MySQL 데이터 유형>
1.문자열
2.숫자
3.날짜 및 시간

[문자열]

Data Type						Description
CHAR(size)						고정 길이 데이터 타입(최대 255byte)
								- 지정된 길이보다 짦은 데이터 입력될 시 나머지 공간 공백으로 채워진다.
                                
VARCHAR(size)					가변 길이 데이터 타입(최대 65,535byte)
								- 지정된 길이보다 짦은 데이터 입력될 시 나머지 공간은 채우지 않는다.
                                
TINYTEXT						문자열 데이터 타입(최대 255byte)

TEXT(size)						문자열 데이터 타입(최대 65,535byte)

MEDIUMTEXT						문자열 데이터 타입(최대 16,777,215byte)

LONGTEXT						문자열 데이터 타입(최대 4,294,967,295byte)

ENUM(val1, val2, val3, ...)		열거형 / 정해진 몇가지의 값들 중 하나만 저장,
								최대 65,535개의 개별 값을 가질 수 있고, 내부적으로 정수 값으로 표현됩니다.
                                
SET(val1, val2, val3, ...)		집합형 / 정해진 몇가지의 값들 중 여러 개를 저장,
								최대 64개의 요소로 구성될 수 있고, 내부적으로 정수 값으로 표현됩니다. 
 

[이진]

Data Type						Description
BINARY(size)					CHAR()와 같으나 이진 바이트 문자열을 저장합니다.
								크기 매개 변수는 열 길이를 바이트 단위로 지정합니다. (최대 255byte)
                                
VARBINARY(size)					VARCHAR()와 같으나 이진 바이트 문자열을 저장합니다.
								size 매개 변수는 최대 열 길이를 바이트 단위로 지정합니다. (최대 65,535byte)
                                
TINYBLOB						이진 데이터 타입 (최대 255byte)

BLOB(size)						대용량의 바이너리 데이터를 저장(실제로 저장하진 않지만, 이미지파일도 저장가능)(최대 65,535byte)
                                
MEDIUMBLOB						이진 데이터 타입 (최대 16,777,215byte)

LONGBLOB          				이진 데이터 타입 (최대 4,294,967,295byte)
								
 

[숫자] * d : 소수

Data Type						Description
BIT(size)	 					비트 값 유형 / n은 값 당 bit 수를 나타내며 1~64 사이의 값을 나타냅니다.

TINYINT(size)					정수형 데이터 타입(1byte) -128 ~ +127 또는 0 ~ 255수 표현할 수 있다.

BOOL
BOOLEAN							0은 거짓으로 간주되고 0이 아닌 값은 참으로 간주됩니다.

SMALLINT(size)					정수형 데이터 타입(2byte) -32768 ~ 32767 또는 0 ~ 65536수 표현할 수 있다.

MEDIUMINT(size)					정수형 데이터 타입(3byte) -8388608 ~ +8388607 또는 0 ~ 16777215수 표현할 수 있다.

INT(size)
INTEGER(size)					정수형 데이터 타입(4byte) -2147483648 ~ +2147483647 또는 0 ~ 4294967295수 표현할 수 있다.

BIGINT(size)					정수형 데이터 타입(8byte) - 무제한 수 표현할 수 있다.

FLOAT(size, d)					부동 소수형 데이터 타입(4byte) -고정 소수점을 사용 형태이다.

FLOAT(p)						부동 소수점 숫자 / p는 비트 정밀도를 가리키지만, MySQL은 결과 데이터 타입으로 FLOAT 또는 DOUBLE을 사용할 지를 결정할 때에만 이 값을 사용

DOUBLE(size, d)					부동 소수형 데이터 타입(8byte) -DOUBLE을 문자열로 저장한다.
DOUBLE PRECISION(size, d)		size는 전체 자릿수(Precision : 정밀도), d는 소수점 뒷자리수(Scale : 배율)

DECIMAL(size, d)
DEC(size, d)					고정 소수형 데이터 타입고정(길이+1byte) -소수점을 사용 형태이다.
 

[날짜 및 시간]

Data Type						Description
DATE							날짜(년도, 월, 일) 형태의 기간 표현 데이터 타입(3byte)
Format: YYYY-MM-DD

DATETIME(fsp)					날짜와 시간 형태의 기간 표현 데이터 타입(8byte)
Format: YYYY-MM-DD hh:mm:ss

TIMESTAMP(fsp)					날짜와 시간 형태의 기간 표현 데이터 타입(4byte)
								시스템 변경 시 자동으로 그 날짜와 시간이 저장된다.
								'1970-01-01 00:00:00' UTC 이후 경과된 초 수를 저장합니다.
                                
TIME(fsp)						시간(시, 분, 초) 형태의 기간 표현 데이터 타입(3byte)
Format: hh:mm:ss

YEAR							년도 표현 데이터 타입(1byte)
								2자리 또는 4자리 형식으로 연도를 저장합니다. 범위 70~69, 1970~2155년을 나타냅니다.
 


<나름 허니 팁! 데이터 타입 선택 방법>
MySQL은 다양한 데이터 타입을 지원하고 있는데, 데이터를 저장하는 데 적합한 데이터 타입을 고르는 것은 좋은 성능을 얻는 데 필수적이다.
1. 타입은 작을수록 좋다
2. 타입은 단순한 게 좋다
3. 가능하면 NULL을 쓰지 말자
 
*/